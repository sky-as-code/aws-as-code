{
	"info": {
		"_postman_id": "50e7563a-da0d-41af-89fc-62961719d3e2",
		"name": "A Thin Book API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "602425"
	},
	"item": [
		{
			"name": "Books - Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const uuid = require('uuid').v4();\r",
							"const payload = JSON.parse(pm.request.body);\r",
							"const randNum = String(Math.random()).substr(2, 5);\r",
							"\r",
							"payload.title = `${payload.title} ${uuid.substr(0, 8)}`;\r",
							"payload.isbn = `${payload.isbn}-${randNum}`;\r",
							"payload.author = `${payload.author} ${uuid.substr(-8, 8)}`;\r",
							"pm.request.body.raw = JSON.stringify(payload);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.text();\r",
							"try {\r",
							"    const payload = JSON.parse(body);\r",
							"    payload.id && pm.environment.set('book_id', payload.id);\r",
							"} catch {}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Infrastructure as code\",\r\n    \"isbn\": \"ABC\",\r\n    \"author\": \"John Doe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/books",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Books - Get list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Books - Get detail",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Books - Delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Errors - Create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Infrastructure as code for Dummies\",\r\n    \"isbn\": \"ABC-123\",\r\n    \"author\": \"John Doe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/books/errors",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"errors"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenName",
				"value": "aws-as-code",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{auth_client_id}}",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{auth_url}}",
				"type": "string"
			},
			{
				"key": "refreshRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "openid email book-service/books",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://example.com",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "implicit",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}