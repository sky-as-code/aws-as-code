AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::LanguageExtensions'
Metadata:
  License: MIT
Description: "Sky-As-Code organisation, AWS-As-Code repository.
  Create an Auto Scaling Group with scheduled scaling policy, abided by following Common context: Single account compliance,
  Resource tagging compliance, AWS Region compliance.
  **WARNING** You will be billed for the AWS resources used if you create a stack from this template,
  and if you have gone out of your 12-month free-tier."
Parameters:
  # For Resource tagging compliance
  Application:
    Description: Name of the application using this AWS resource.
    Type: String
  CostCenter:
    Description: The department code.
    Type: String
  Environment:
    Description: The deployment environment.
    Type: String

  # For this stack
  AmiId:
    Description: A public SSM Parameter path for AMI ID.
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2' # See: https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-public-parameters-ami.html
  AvailabilityZones:
    Description: The Availability Zones where instances in the Auto Scaling group can be created.
    Type: String
    Default: ''
  GroupName:
    Description: Last part of ASG name, it will be prepended with a prefix.
    Type: String
  InstanceType:
    Description: EC2 instance type.
    Type: String
    AllowedValues: [t2.micro, t3.micro]
    ConstraintDescription: must be a free-tier eligible EC2 instance type.

Mappings:
  AllowedRegions:
    ap-southeast-1:
      Allowed: "true"
    eu-central-1:
      Allowed: "true"
    us-east-1:
      Allowed: "true"

Conditions:
  RegionIsAllowed: !Not
    - !Equals
      - !FindInMap [AllowedRegions, !Ref "AWS::Region", Allowed]
      - ''
  HasAZs: !Not
    - !Equals
      - !Ref AvailabilityZones
      - ''

Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !If
        - HasAZs
        - !Split [",", !Ref AvailabilityZones]
        - !GetAZs ''
      AutoScalingGroupName: !Join
        - '-'
        - - !Ref CostCenter
          - !Ref Application
          - !Ref Environment
          - !Ref GroupName
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 5
      Tags:
        - Key: Application
          Value: !Ref Application
          PropagateAtLaunch: true
        - Key: CostCenter
          Value: !Ref CostCenter
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref Environment
          PropagateAtLaunch: true
    CreationPolicy:
      # Prevent ASG from reaching complete state before Cloudformation stack receives
      # cfn-signal from all new launched EC2 Instances.
      # See more: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#aws-properties-as-group--remarks:~:text=prevent%20its%20status%20from%20reaching%20create%20complete
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 2
        PauseTime: PT15M
        # Suspend ASG update until receiving cfn-signal from all new launched EC2 Instances.
        # See more: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-rollingupdate:~:text=use%20the%20cfn%2Dsignal%20helper%20script
        WaitOnResourceSignals: true
      AutoScalingScheduledAction:
        # Prevent Cloudformation from resetting min size, max size, and desired capacity properties
        # while Scheduled action is in effect.
        # See more: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-scheduledactions
        IgnoreUnmodifiedGroupSizeProperties: true

  ScheduledActionUp:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      MaxSize: 10
      MinSize: 5
      Recurrence: 0 7 * * *
  ScheduledActionDown:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      MaxSize: 5
      MinSize: 1
      Recurrence: 0 19 * * *

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      Comment: Starts an EC2 Instance with up-to-date yum packages.
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchTemplate.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchTemplate --region ${AWS::Region}
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files: [/etc/cfn/cfn-hup.conf, /etc/cfn/hooks.d/cfn-auto-reloader.conf]
    Properties:
      LaunchTemplateName: !Join
        - '-'
        - - !Ref CostCenter
          - !Ref Application
          - !Ref Environment
          - !Ref GroupName
          - launch-template
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        # IamInstanceProfile:
        #   Name: !Ref myInstanceProfile
        # SecurityGroups:
        # - Ref! myNewEC2SecurityGroup
        # - myExistingEC2SecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Application
                Value: !Ref Application
              - Key: CostCenter
                Value: !Ref CostCenter
              - Key: Environment
                Value: !Ref Environment
          - ResourceType: volume
            Tags:
              - Key: Application
                Value: !Ref Application
              - Key: CostCenter
                Value: !Ref CostCenter
              - Key: Environment
                Value: !Ref Environment
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchTemplate --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}

Outputs:
  AsgName:
    Description: Full name of the newly created Auto Scaling Group.
    Value: !Ref AutoScalingGroup
